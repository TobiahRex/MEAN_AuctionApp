"use strict";angular.module("MightyShore",["ngAnimate","ui.router","ui.bootstrap","satellizer","toastr","ngFileUpload"]),angular.module("MightyShore").controller("forgotController",["$scope","$state",function(t,e){console.log("forgotCtrl")}]),angular.module("MightyShore").controller("homeController",["$scope","$state","Items","allItems",function(t,e,o,r){console.log("homeCtrl");var n=r;t.allItems=n.data}]),angular.module("MightyShore").controller("loginController",["$scope","$state","$auth","Auth",function(t,e,o,r){console.log("loginCtrl"),t.loginUser=function(r){o.login(r).then(function(o){return 200!==o.status?console.log("login failed.",o.data):(t.$emit("loggedIn"),void e.go("profile"))})["catch"](function(t){return console.log("ERROR: ",t)})},t.authenticate=function(e){o.authenticate(e).then(function(e){return t.$emit("loggedIn")})["catch"](function(t){return console.log("ERROR: login error")})}}]),angular.module("MightyShore").controller("logoutController",["$scope","$state","$auth","Auth","toastr",function(t,e,o,r,n){console.log("logoutCtrl"),r.logoutUser().then(function(e){o.logout(),n.info("You have been successfully logged out.","Logged Out",{iconClass:"toast-logout"}),t.$emit("loggedOut")})}]),angular.module("MightyShore").controller("mainController",["$scope","$state","Auth","toastr",function(t,e,o,r){function n(){o.getProfile().then(function(o){t.currentUser=o.data,e.go("profile",{id:o.data._id})})["catch"](function(o){t.currentUser=null,e.go("login")})}n(),t.$on("loggedIn",function(){n()}),t.$on("loggedOut",function(){n()})}]),angular.module("MightyShore").controller("newItemController",["$scope","$state","Items",function(t,e,o){function r(){o.getAll().then(function(e){t.items=e.data})["catch"](function(e){t.items=e})}t.$on("getNewItems",function(){r()})}]),angular.module("MightyShore").controller("profileController",["$state","$scope","Auth","dbProfile","Profile",function(t,e,o,r,n){console.log("profileCtrl");var l=r;e.profile=l.data,e.newItems=function(){return e.$broadcast("getNewItems")}}]),angular.module("MightyShore").controller("registerController",["$scope","$state","$auth","Auth","toastr",function(t,e,o,r,n){console.log("registerCtrl");var l={Access:"Not-Assigned",Username:"",_Password:"",Firstname:"",Lastname:"",Email:"",Bio:"",Avatar:""};t.registerNewUser=function(o){return o.password!==o._Password?console.log("ERROR: Passwords do not match."):(l.Username=o.Username,l._Password=o._Password,l.Email=o.Email,l.Bio=o.Bio,l.Avatar=o.Avatar||o.AvatarFile,o.name.split(" ").forEach(function(t,e){0===e?l.Firstname=t:1===e?l.Lastname=t:null}),console.log("userObj: ",l),void r.registerUser(l).then(function(e){n.info("Please check your Email for a registration link.","Registered!",{iconClass:"toast-register"}),t.$emit("loggedIn")})["catch"](function(t){console.log("register error: ",t),e.go("home")}))}}]),angular.module("MightyShore").controller("splashController",["$scope","$state",function(t,e){console.log("splashCtrl"),t.goToHome=function(){e.go("home")}}]),angular.module("MightyShore").config(["$stateProvider","$urlRouterProvider","$authProvider","toastrConfig",function(t,e,o,r){o.loginUrl="/api/users/login",o.signupUrl="/api/users/register",o.facebook({clientId:"1564954670477132",url:"/api/oauth/facebook"}),t.state("splash",{url:"/",templateUrl:"html/splash.html",controller:"splashController"}).state("home",{url:"/home",templateUrl:"html/home.html",controller:"homeController",resolve:{allItems:["Items","$q","$state",function(t,e,o){return t.getAll()["catch"](function(t){return $scope.allItems=t,e.reject()})}]}}).state("register",{url:"/register",templateUrl:"html/sign_in/register.html",controller:"registerController"}).state("verify",{url:"/verify",templateUrl:"html/sign_in/verify.html"}).state("verified",{url:"/verified",templateUrl:"html/sign_in/verified.html"}).state("unverified",{url:"/unverified",templateUrl:"html/sign_in/unverified.html"}).state("login",{url:"/login",templateUrl:"html/sign_in/login.html",controller:"loginController"}).state("logout",{url:"/logout",controller:"logoutController"}).state("forgot",{url:"/forgot",templateUrl:"html/sign_in/forgot.html",controller:"forgotController"}).state("profile",{url:"/profile/:id",templateUrl:"html/profile.html",controller:"profileController",resolve:{dbProfile:["Auth","$q","$state",function(t,e,o){return t.getProfile()["catch"](function(){return o.go("login"),e.reject()})}]}}),e.otherwise("/"),angular.extend(r,{allowHtml:!1,closeButton:!1,closeHtml:"<button>&times;</button>",extendedTimeOut:5e3,iconClasses:{error:"toast-error",info:"toast-info",success:"toast-success",warning:"toast-warning"},messageClass:"toast-message",onHidden:null,onShown:null,onTap:null,progressBar:!1,tapToDismiss:!0,templates:{toast:"directives/toast/toast.html",progressbar:"directives/progressbar/progressbar.html"},timeOut:5e3,titleClass:"toast-title",toastClass:"toast"})}]),angular.module("MightyShore").service("Auth",["$http",function(t){this.getUsers=function(){return t.get("/api/users")},this.getUser=function(e){return t.get("/api/users/"+e)},this.loginUser=function(e){return t.post("/api/users/login",e)},this.logoutUser=function(){return t.post("/api/users/logout")},this.registerUser=function(e){return t.post("/api/users/register",e)},this.getProfile=function(){return t.get("/api/users/profile")},this.toggleAdmin=function(e){return t.put("/api/users/"+e+"/toggle_admin")}}]),angular.module("MightyShore").service("Items",["$http",function(t){this.getAll=function(){return t.get("/api/items")},this.newItem=function(e){return t.post("/api/items",e)},this.getItem=function(e){return t.get("/api/items/"+e)},this.editItem=function(e){return t.put("/api/items/"+e.id,e)},this.deleteItem=function(e){return t["delete"]("/api/items/"+e)}}]),angular.module("MightyShore").service("Profile",["$http",function(t){this.getNewItems=function(e){return t.get("/api/profile/"+e+"/new_items")},this.getOffers=function(e){return t.get("/api/profile/"+e+"/new_bids")},this.getPendingBids=function(e){return t.get("/api/profile/"+e+"/get_pending")},this.getWatchList=function(e){return t.get("/api/profile/"+e+"/get_watchlist")},this.getStats=function(e){return t.get("/api/profile/"+e+"/get_stats")},this.getAccount=function(e){return t.get("/api/profile/"+e+"/get_account")},this.getChats=function(e){return t.get("/api/profile/"+e+"/get_chats")}}]);
//# sourceMappingURL=data:application/json;base64,
